#!/bin/sh

set -u # Treat unset variables as an error.

trap "exit" TERM QUIT INT
trap "clean_exit" EXIT

clean_exit() {
    if [ "${RUNDIR:-UNSET}" != "UNSET" ]; then
        rm -rf "$RUNDIR"
    fi
}

die() {
    [ -z "$*" ] || echo "ERROR: $*"
    exit 1
}

if [ "${@:-UNSET}" = "UNSET" ]; then
    die "At least one file needs to specified."
fi

for FILE in "$@"; do
    [ -f "$FILE" ] || die "File not found: $FILE"
    [ -r "$FILE" ] || die "File not readable: $FILE"
done

RUNDIR="$(mktemp -d)"

compute_file_hash() {
    stat -c '%n %s %Y' "$1" | md5sum | cut -d' ' -f1
}

load_file_hash() {
    FILE_PATH="$1"
    HASH_FILENAME="$(echo "$FILE_PATH" | md5sum | cut -d' ' -f1)"
    if [ -f "$RUNDIR"/"$HASH_FILENAME" ]; then
        cat "$RUNDIR"/"$HASH_FILENAME"
    else
        echo "UNSET"
    fi
}

save_file_hash() {
    FILE_PATH="$1"
    FILE_HASH="$2"
    HASH_FILENAME="$(echo "$FILE_PATH" | md5sum | cut -d' ' -f1)"
    echo "$FILE_HASH" > "$RUNDIR"/"$HASH_FILENAME"
}

while true; do
    for FILE in "$@"; do
        HASH="$(compute_file_hash "$FILE")"
        [ $? -eq 0 ] || exit $?
        if [ "$HASH" != "$(load_file_hash "$FILE")" ]; then
            cat "$FILE"
            save_file_hash "$FILE" "$HASH"
        fi
    done
    sleep 5
done
